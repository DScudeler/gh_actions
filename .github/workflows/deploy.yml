name: CD - Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    name: Build WASM Application
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Pages
      uses: actions/configure-pages@v3

    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true

    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Install wasm-pack
      run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

    - name: Build WASM package
      run: ./build-wasm.sh

    - name: Setup Pages artifact
      run: |
        # Create a deployment directory
        mkdir -p _site
        # Copy the web assets
        cp -r www/* _site/
        # Ensure the WASM package is included
        ls -la _site/pkg/

    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: _site

  deploy:
    name: Deploy to GitHub Pages  
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2